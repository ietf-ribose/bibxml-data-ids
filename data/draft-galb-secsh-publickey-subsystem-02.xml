<reference anchor="I-D.galb-secsh-publickey-subsystem">
  <front>
    <title>Secure Shell Public-Key Subsystem</title>
    <seriesInfo name="Internet-Draft" value="draft-galb-secsh-publickey-subsystem-02"/>
    <author>
      <organization abbrev="IETF">Internet Engineering Task Force</organization>
    </author>
    <author fullname="Joseph Galbraith" initials="J." surname="Galbraith">
      <organization>VanDyke Software</organization>
    </author>
    <author fullname="Jeff Van Dyke" initials="J." surname="Van Dyke">
      <organization>VanDyke Software</organization>
    </author>
    <author fullname="Dr. Charles R. McClure" initials="C. R." surname="McClure"/>
    <date year="2003" month="August" day="20"/>
    <abstract>
      <t>SECSH defines an authentication mechanism that is based on public keys, but does not define any mechanism for key distribution. No common key management solution exists in current implementations. This document describes a protocol that can be used to configure public keys in an implementation-independent fashion, allowing client software to take on the burden of this configuration. This protocol is intended to be used from the Secure Shell Connection Protocol [4] as a subsystem, as described in Section ``Starting a Shell or a Command''. The subsystem name used with this protocol is The public-key subsystem provides a server-independent mechanism for clients to add public keys, remove public keys, and list the current public keys known by the server. Rights to manage public keys are specific and limited to the authenticated user. A public key may also be associated with a mandatory command.</t>
    </abstract>
  </front>
</reference>