<reference anchor="I-D.gao-alto-routing-state-abstraction">
  <front>
    <title>Recommendation for Compressing ALTO Path Vector</title>
    <author>
      <organization abbrev="IETF">Internet Engineering Task Force</organization>
    </author>
    <author fullname="Kai Gao" initials="K." surname="Gao">
      <organization>Tsinghua University</organization>
    </author>
    <author fullname="xinwang2014@hotmail.com" initials="" surname="xinwang2014@hotmail.com">
      <organization>Tongji University</organization>
    </author>
    <author fullname="Chen Gu" initials="C." surname="Gu">
      <organization>Tongji University</organization>
    </author>
    <author fullname="Y. Richard Yang" initials="Y. R." surname="Yang">
      <organization>Yale University</organization>
    </author>
    <author fullname="G.Robert Chen" initials="G." surname="Chen">
      <organization>Huawei</organization>
    </author>
    <date year="2017" month="June" day="27"/>
    <abstract>
      <t>The path vector extension [I-D.ietf-alto-path-vector] has extended the original ALTO protocol [RFC7285] with the ability to represent not only end-to-end metrics but also information about shared link risk groups (SLRG). However, straw man algorithms to compute ALTO path vector can contain redundant information and result in unnecessary communication overhead. The situation gets even worse when certain ALTO extensions are enabled, for example, the incremental extension [I-D.ietf-alto-incr-update-sse] which continuously pushes data changes to ALTO clients. In this document, an algorithm is described which can effectively reduce the communication overhead while still containing the same information as in the original path vector. The algorithm is fully compatible with the path vector extension and has several by-products which can be leveraged by other extensions to achieve better performance.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-gao-alto-routing-state-abstraction-04"/>
</reference>