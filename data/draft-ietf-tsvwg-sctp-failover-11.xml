<reference anchor="I-D.ietf-tsvwg-sctp-failover">
  <front>
    <title>SCTP-PF: Quick Failover Algorithm in SCTP</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-tsvwg-sctp-failover-11"/>
    <author>
      <organization abbrev="IETF">Internet Engineering Task Force</organization>
    </author>
    <author fullname="Yoshifumi Nishida" initials="Y." surname="Nishida"/>
    <author fullname="Preethi Natarajan" initials="P." surname="Natarajan"/>
    <author fullname="Armando L. Caro" initials="A. L." surname="Caro"/>
    <author fullname="Paul D. Amer" initials="P. D." surname="Amer"/>
    <author fullname="Karen Nielsen" initials="K." surname="Nielsen"/>
    <date year="2015" month="July" day="19"/>
    <abstract>
      <t>SCTP supports multi-homing. However, when the failover operation specified in RFC4960 is followed, there can be significant delay and performance degradation in the data transfer path failover. To overcome this problem this document specifies a quick failover algorithm (SCTP-PF) based on the introduction of a Potentially Failed (PF) state in SCTP Path Management. The document also specifies a dormant state operation of SCTP. This dormant state operation is required to be followed by an SCTP-PF implementation, but it may equally well be applied by a standard RFC4960 SCTP implementation. Additionally, the document introduces an alternative switchback mode called Permanent Failover that will be beneficial in some situations. This mode of operation applies to both a standard RFC4960 SCTP implementation as well as to a SCTP-PF implementation. The procedures defined in the document require only minimal modifications to the RFC4960 specification. The procedures are sender-side only and do not impact the SCTP receiver.</t>
    </abstract>
  </front>
</reference>