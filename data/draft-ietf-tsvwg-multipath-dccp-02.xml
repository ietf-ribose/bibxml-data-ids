<reference anchor="I-D.ietf-tsvwg-multipath-dccp">
  <front>
    <title>DCCP Extensions for Multipath Operation with Multiple Addresses</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-tsvwg-multipath-dccp-02"/>
    <author fullname="Markus Amend">
      <organization>Deutsche Telekom</organization>
    </author>
    <author fullname="Anna Brunstrom">
      <organization>Karlstad University</organization>
    </author>
    <author fullname="Andreas Kassler">
      <organization>Karlstad University</organization>
    </author>
    <author fullname="Veselin Rakocevic">
      <organization>City University of London</organization>
    </author>
    <author fullname="Stephen Johnson">
      <organization>BT</organization>
    </author>
    <date year="2021" month="November" day="9"/>
    <abstract>
      <t>DCCP communication is currently restricted to a single path per connection, yet multiple paths often exist between peers. The simultaneous use of these multiple paths for a DCCP session could improve resource usage within the network and, thus, improve user experience through higher throughput and improved resilience to network failures. Use cases for a Multipath DCCP (MP-DCCP) are mobile devices (handsets, vehicles) and residential home gateways simultaneously connected to distinct paths as, e.g., a cellular link and a WiFi link or to a mobile radio station and a fixed access network. Compared to existing multipath protocols such as MPTCP, MP- DCCP provides specific support for non-TCP user traffic as UDP or plain IP. More details on potential use cases are provided in [website], [slide], and [paper]. All these use cases profit from an Open Source Linux reference implementation provided under [website]. This document presents a set of extensions to traditional DCCP to support multipath operation. Multipath DCCP provides the ability to simultaneously use multiple paths between peers. The protocol offers the same type of service to applications as DCCP and it provides the components necessary to establish and use multiple DCCP flows across potentially disjoint paths.</t>
    </abstract>
  </front>
</reference>