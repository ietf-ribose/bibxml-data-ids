<reference anchor="I-D.worley-redundancy-response">
  <front>
    <title>Supporting Multiple Path Routing in the Session Initiation Protocol (SIP)</title>
    <seriesInfo name="Internet-Draft" value="draft-worley-redundancy-response-04"/>
    <author fullname="Dale Worley"/>
    <date year="2009" month="March" day="6"/>
    <abstract>
      <t>An increasing number of SIP architectures implement multiple pathrouting (MPR), which is the providing of more than one path for acall to reach a destination user agent (UA). A typical example is aredundant pair of gateways from a SIP system to the PSTN. A callfrom the SIP system to the PSTN can pass through either gateway toultimately reach the destination telephone. In order to gain thebenefits of redundancy in case one of the gateways fails or reachescapacity, a proxy forks INVITEs serially to both gateways.Unfortunately, if the call passes through one gateway but fails atthe destination phone (e.g., ring-no-answer), the proxy will thenfork the call to the other gateway, because the proxy has no way toknow that the call failed at the destination phone rather than at thefirst gateway. The second fork will fail in the same way at the samedestination phone. This annoys both the caller (because the calltakes twice as long as it should before failing) and anyone withinearshot of the destination phone. Similar failures plague any otherSIP architecture where a request can reach a destination throughmultiple paths.To gain the benefits of MPR without suffering from this problem, theproxy which forks a request onto the redundant paths needs to be ableto determine if a fork that failed reached the destination UA and wasrejected by the UA (and so an alternate path should not be tried), orif the fork failed before reaching the UA (and so an alternate pathshould be attempted). This document is to begin a discussion ofstrategies for making this determination.</t>
    </abstract>
  </front>
</reference>