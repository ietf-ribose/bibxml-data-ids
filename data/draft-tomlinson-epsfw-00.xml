<reference anchor="I-D.tomlinson-epsfw">
  <front>
    <title>Extensible Proxy Services Framework
</title>
    <seriesInfo name="Internet-Draft" value="draft-tomlinson-epsfw-00"/>
    <author fullname="James Kempf" initials="J." surname="Kempf">
      <organization>Sun Microsystems</organization>
    </author>
    <author fullname="Michael Condry" initials="M." surname="Condry">
      <organization>Sun Microsystems</organization>
    </author>
    <author fullname="Hilarie Orman" initials="H." surname="Orman">
      <organization>Novell</organization>
    </author>
    <author fullname="Gary Tomlinson" initials="G." surname="Tomlinson">
      <organization>Novell</organization>
    </author>
    <author fullname="Dave A. Farber" initials="D. A." surname="Farber">
      <organization>Digital Island</organization>
    </author>
    <date year="2000" month="July" day="17"/>
    <abstract>
      <t>In today's Internet, caching proxies that intermediate between HTTP (and increasingly streaming media) clients and servers provide enhanced performance for Web page access. Both clients and servers are increasingly looking to the network for additional services that can't be provided directly on the client or server, and Web proxies are an attractive place for locating these services. In fact, some such services (content assembly for advertising) are already being offered by Web proxies for servers, but in a nonstandard way. This document describes the problem and solution requirements for a standardized, open and extensible service environment on caching proxies which enables them to provide general services that mediate, modify, and monitor object requests and responses. It introduces an architectural framework along with a set of core requirements necessary to design standardized implementations for this application domain, taking into account relevant IETF RFCs and IETF work-in-progress. The architecture and requirements described here are mindful of the success of end-to-end nature of Internet client/server interactions, and the consequences of the proposed architectural changes on end-to-end semantics are discussed.</t>
    </abstract>
  </front>
</reference>