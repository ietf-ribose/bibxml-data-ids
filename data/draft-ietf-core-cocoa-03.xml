<reference anchor="I-D.ietf-core-cocoa">
  <front>
    <title>CoAP Simple Congestion Control/Advanced</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-core-cocoa-03"/>
    <author>
      <organization abbrev="IETF">Internet Engineering Task Force</organization>
    </author>
    <author fullname="Carsten Bormann">
      <organization>Universitaet Bremen TZI</organization>
    </author>
    <author fullname="August Betzler">
      <organization>Fundacio i2CAT</organization>
    </author>
    <author fullname="Carles Gomez">
      <organization>Universitat Politecnica de Catalunya/Fundacio i2CAT</organization>
    </author>
    <author fullname="Ilker Demirkol">
      <organization>Universitat Politecnica de Catalunya/Fundacio i2CAT</organization>
    </author>
    <date year="2018" month="February" day="21"/>
    <abstract>
      <t>CoAP, the Constrained Application Protocol, needs to be implemented in such a way that it does not cause persistent congestion on the network it uses. The CoRE CoAP specification defines basic behavior that exhibits low risk of congestion with minimal implementation requirements. It also leaves room for combining the base specification with advanced congestion control mechanisms with higher performance. This specification defines more advanced, but still simple CoRE Congestion Control mechanisms, called CoCoA. The core of these mechanisms is a Retransmission TimeOut (RTO) algorithm that makes use of Round-Trip Time (RTT) estimates, in contrast with how the RTO is determined as per the base CoAP specification (RFC 7252). The mechanisms defined in this document have relatively low complexity, yet they improve the default CoAP RTO algorithm. The design of the mechanisms in this specification has made use of input from simulations and experiments in real networks.</t>
    </abstract>
  </front>
</reference>