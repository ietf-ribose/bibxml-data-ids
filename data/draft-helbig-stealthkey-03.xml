<reference anchor="I-D.helbig-stealthkey">
  <front>
    <title>Zyfer's StealthKey Management for frequent rekeying</title>
    <seriesInfo name="Internet-Draft" value="draft-helbig-stealthkey-03"/>
    <author fullname="Derek Au" initials="D." surname="Au">
      <organization>Zyfer</organization>
    </author>
    <author fullname="Peter Balke" initials="P." surname="Balke">
      <organization>Zyfer</organization>
    </author>
    <author fullname="Hugo Fruehauf" initials="H." surname="Fruehauf">
      <organization>Zyfer</organization>
    </author>
    <author fullname="Christina Helbig" initials="C." surname="Helbig">
      <organization>Zyfer</organization>
    </author>
    <author fullname="Klaus Helbig" initials="K." surname="Helbig">
      <organization>Zyfer</organization>
    </author>
    <date year="2002" month="September" day="25"/>
    <abstract>
      <t>This document describes a key management, designated as StealthKeyManagement. StealthKey Management establishes short-term keys whichare derived from a common long-term key in two entities, referredto as sender and receiver, for symmetric encryption algorithms andcryptographic authentication protocols based on a common secret.Stealthkey Management covers two main parts:- Independent generation of the short-term keys by the sender andreceiver from either the common long-term key and the time, orfrom the common long-term key and a sequence number.- Synchronization of the short-term keys between both entities.The important advantages of using StealthKey Management for messageencryption and authentication are the ability to change the short-term keys frequently, without exchanges between sender and receiverand the independence of other applications for the key changeprocess (in band). A commonly used term for key change is rekeying.The required long-term key can be established remotely through theuse of known symmetric or asymmetric key protocols, or locally viamanual setup. StealthKey Management improves the performance of anyof today's key management protocols, by extending the protocol withthe frequent changing of keys.</t>
    </abstract>
  </front>
</reference>