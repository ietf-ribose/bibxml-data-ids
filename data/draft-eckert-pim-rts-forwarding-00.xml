<reference anchor="I-D.eckert-pim-rts-forwarding" target="https://datatracker.ietf.org/doc/html/draft-eckert-pim-rts-forwarding-00">
  <front>
    <title>Stateless Multicast Replication with Segment Routed Recursive Tree Structures (RTS)</title>
    <author fullname="Toerless Eckert" initials="T. T." surname="Eckert">
      <organization>Futurewei Technologies USA</organization>
    </author>
    <author fullname="Michael Menth" initials="M." surname="Menth">
      <organization>University of Tuebingen</organization>
    </author>
    <author fullname="Steffen Lindner" initials="S." surname="Lindner">
      <organization>University of Tuebingen</organization>
    </author>
    <date year="2023" month="October" day="23"/>
    <abstract>
      <t>BIER provides stateless multicast in BIER domains using bitstrings to indicate receivers. BIER-TE extends BIER with tree engineering capabilities. Both suffer from scalability problems in large networks as bitsrings are of limited size so the BIER domains need to be subdivided using set identifiers so that possibly many packets need to be sent to reach all receivers of a multicast group within a subdomain. This problem can be mitigated by encoding explicit multicast trees in packet headers with bitstrings that have only node-local significance. A drawback of this method is that any hop on the path needs to be encoded so that long paths consume lots of header space. This document presents the idea of Segment Routed Recursive Tree Structures (RTS), a unifying approach to use either bitstrings with local node-local significance or SIDs with local or domain-wide significance to encode multicast trees in packet headers. RTS, like RBS is intended to expand the applicability of deployment for stateless multicast replication beyond what BIER and BIER-TE support and expect: larger networks, less operational complexity, and utilization of more modern forwarding planes as those expected to be possible when BIER was designed (ca. 2010). This document only specifies the forwarding plane but discusses possible architectural options, which are primarily determined through the future definition/mapping to encapsulation headers and controller-plane functions.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-eckert-pim-rts-forwarding-00"/>
</reference>