<reference anchor="I-D.rosenberg-sip-app-components">
  <front>
    <title>An Application Server Component Architecture for SIP</title>
    <author fullname="Jonathan Rosenberg" initials="J." surname="Rosenberg">
      <organization/>
    </author>
    <author fullname="Henning Schulzrinne" initials="H." surname="Schulzrinne">
      <organization/>
    </author>
    <date year="2001" month="March" day="9"/>
    <abstract>
      <t>An application server is defined as an entity that is capable of providing advanced features to users. Examples of features include call forwarding, call screening, debit card calling, web interactive voice response, etc. However, the set of functions needed to enable a broad range of such applications is quite large - it includes speech recognition, DTMF recognition and digit collection, text-to-speech synthesis, database interfacing, audio and video coding and decoding, audio and video bridging and mixing, and signaling, to name a few. Supporting such a large set of functions on the same box presents a major challenge. To solve this problem, the industry is proposing a decomposition of the application server into two components - a media server that handles the media component, and an application server that handles the call control, data, and signaling. The interface that has been proposed between these two elements is a control mechanism along the lines of MGCP or Megaco. In this paper, we propose an orthogonal decomposition, which breaks an application server into application server components. Each component represents a application server in its own right, but it provides a well defined component that by itself may be a complete, but simpler, application.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-rosenberg-sip-app-components-01"/>
  <format type="TXT" target="https://www.ietf.org/archive/id/draft-rosenberg-sip-app-components-01.txt"/>
</reference>