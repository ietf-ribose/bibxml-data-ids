<reference anchor="I-D.ietf-spring-segment-routing">
  <front>
    <title>Segment Routing Architecture</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-spring-segment-routing-02"/>
    <author>
      <organization abbrev="IETF">Internet Engineering Task Force</organization>
    </author>
    <author fullname="Clarence Filsfils" initials="C." surname="Filsfils"/>
    <author fullname="Stefano Previdi" initials="S." surname="Previdi"/>
    <author fullname="Ahmed Bashandy" initials="A." surname="Bashandy"/>
    <author fullname="Bruno Decraene" initials="B." surname="Decraene"/>
    <author fullname="Stephane Litkowski" initials="S." surname="Litkowski"/>
    <author fullname="Martin Horneffer" initials="M." surname="Horneffer"/>
    <author fullname="Rob Shakir" initials="R." surname="Shakir"/>
    <author fullname="Jeff Tantsura" initials="J." surname="Tantsura"/>
    <author fullname="Edward Crabbe" initials="E." surname="Crabbe"/>
    <date year="2015" month="May"/>
    <abstract>
      <t>Segment Routing (SR) leverages the source routing paradigm. A node steers a packet through an ordered list of instructions, called segments. A segment can represent any instruction, topological or service-based. A segment can have a local semantic to an SR node or global within an SR domain. SR allows to enforce a flow through any topological path and service chain while maintaining per-flow state only at the ingress node to the SR domain. Segment Routing can be directly applied to the MPLS architecture with no change on the forwarding plane. A segment is encoded as an MPLS label. An ordered list of segments is encoded as a stack of labels. The segment to process is on the top of the stack. Upon completion of a segment, the related label is popped from the stack. Segment Routing can be applied to the IPv6 architecture, with a new type of routing extension header. A segment is encoded as an IPv6 address. An ordered list of segments is encoded as an ordered list of IPv6 addresses in the routing extension header. The segment to process is indicated by a pointer in the routing extension header. Upon completion of a segment, the pointer is incremented.</t>
    </abstract>
  </front>
</reference>