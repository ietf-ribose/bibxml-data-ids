<reference anchor="I-D.ohba-mpls-loop-prevention" target="https://datatracker.ietf.org/doc/html/draft-ohba-mpls-loop-prevention-02">
  <front>
    <title>MPLS Loop Prevention Mechanism</title>
    <author fullname="Yasuhiro Katsube" initials="Y." surname="Katsube">
      <organization/>
    </author>
    <author fullname="Dr. Yoshihiro Ohba" initials="Y." surname="Ohba">
      <organization/>
    </author>
    <author fullname="Eric C. Rosen" initials="E. C." surname="Rosen">
      <organization/>
    </author>
    <author fullname="Paul Doolan" initials="P." surname="Doolan">
      <organization/>
    </author>
    <date year="1998" month="November" day="19"/>
    <abstract>
      <t>This paper presents a simple mechanism, based on 'threads', which can be used to prevent MPLS from setting up label switched path (LSPs) which have loops. The mechanism is compatible with, but does not require, VC merge. The mechanism can be used with either the ordered downstream-on-demand allocation or ordered downstream allocation. The amount of information that must be passed in a protocol message is tightly bounded (i.e., no path-vector is used). When a node needs to change its next hop, a distributed procedure is executed, but only nodes which are downstream of the change are involved.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ohba-mpls-loop-prevention-02"/>
</reference>