<reference anchor="I-D.ferguson-pppsonet-selfsync">
  <front>
    <title>Self-Synchronous Scramblers For PPP Over Sonet/SDH: Some Analysis</title>
    <author>
      <organization abbrev="IETF">Internet Engineering Task Force</organization>
    </author>
    <author fullname="Dennis Ferguson" initials="D." surname="Ferguson">
      <organization/>
    </author>
    <author fullname="Ravi Cherukuri" initials="R." surname="Cherukuri">
      <organization/>
    </author>
    <date year="1997" month="November"/>
    <abstract>
      <t>The use of a self-synchronous scrambler to minimize the possibility that a carefully chosen PPP over SONET/SDH payload can cause a long sequence of zero bits to be transmitted is examined. It is pointed out that, while self-synchronous scramblers have some attractive properties for the application, the x^43 + 1 scrambler used by ATM for the same purpose has some unfortunate interactions with the 16-bit CRC Frame Check Sequence which is the PPP default FCS. It is suggested that adding a third term to the self-synchronous generator polynomial might improve its behaviour, and that inverting the scrambler bit ordering so it is applied to the data in the same bit order as the PPP CRC FCS algorithms are defined for may eliminate any remaining effect such scramblers have on either PPP FCS.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ferguson-pppsonet-selfsync-00"/>
</reference>