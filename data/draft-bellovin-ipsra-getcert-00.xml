<reference anchor="I-D.bellovin-ipsra-getcert">
  <front>
    <title>Client Certificate and Key Retrieval for IKE</title>
    <seriesInfo name="Internet-Draft" value="draft-bellovin-ipsra-getcert-00"/>
    <author fullname="Steven M. Bellovin" initials="S. M." surname="Bellovin"/>
    <author fullname="Robert Moskowitz" initials="R." surname="Moskowitz"/>
    <date year="2000" month="February" day="16"/>
    <abstract>
      <t>(Insert justification, possibly copied wholesale from section 1.1 andmaybe 2.1/2.2 of draft-kelly-ipsra-userauth-00.txt)We consider inadvisable to change IKE [RFC2409] to meet these needs.IKE is a complex protocol; adding more features to it is a bad idea.Instead, we propose a layered approach: use standard IKE, withcertificates, but provide a simple mechanism to provide clients withkeys and certificates.A number of objections have been raised to using certificates. Themost important is that we lack a public key infrastructure (PKI). Wedo not agree that this is an obstacle. Our proposal provides asimple mechanism for certificate generation and retrieval, whilestill relying on legacy authentication infrastructures. Furthermore,we provide for an easy migration path to certificate use onceorganizational PKIs are deployed.Our purpose at this point is not to present a firm protocol. Rather,we sketch several ideas for what such a protocol could look like.Final details can be determined if and when the working group optsfor this path.In the interests of simplicity, we have chosen to reuse standardprotocols and components. In particular, we use HTTP [RFC2616] fortransport, HTML [RFC1866] as a data representation and TLS [RFC2246]for confidentiality. However, we do not mandate (or even necessarilyencourage) use of a actual Web browser for certificate retrieval.As an alternative, we present a transient shared secret generationmechanism for IKE.</t>
    </abstract>
  </front>
</reference>