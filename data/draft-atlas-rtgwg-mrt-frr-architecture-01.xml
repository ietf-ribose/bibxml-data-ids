<reference anchor="I-D.atlas-rtgwg-mrt-frr-architecture" target="https://datatracker.ietf.org/doc/html/draft-atlas-rtgwg-mrt-frr-architecture-01">
  <front>
    <title>An Architecture for IP/LDP Fast-Reroute Using Maximally Redundant Trees</title>
    <author fullname="Alia Atlas" initials="A." surname="Atlas">
      <organization>Juniper Networks</organization>
    </author>
    <author fullname="Robert Kebler" initials="R." surname="Kebler">
      <organization>Juniper Networks</organization>
    </author>
    <author fullname="Maciek Konstantynowicz" initials="M." surname="Konstantynowicz">
      <organization>Juniper Networks</organization>
    </author>
    <author fullname="Andras Csaszar" initials="A." surname="Csaszar">
      <organization>Ericsson</organization>
    </author>
    <author fullname="Russ White" initials="R." surname="White">
      <organization>Cisco Systems</organization>
    </author>
    <author fullname="Mike Shand" initials="M." surname="Shand">
      <organization/>
    </author>
    <date year="2011" month="October" day="31"/>
    <abstract>
      <t>As IP and LDP Fast-Reroute are increasingly deployed, the coverage limitations of Loop-Free Alternates are seen as a problem that requires a straightforward and consistent solution for IP and LDP, for unicast and multicast. This draft describes an architecture based on redundant backup trees where a single failure can cut a point-of-local-repair from the destination only on one of the pair of redundant trees. One innovative algorithm to compute such topologies is maximally disjoint backup trees. Each router can compute its next-hops for each pair of maximally disjoint trees rooted at each node in the IGP area with computational complexity similar to that required by Dijkstra. The additional state, address and computation requirements are believed to be significantly less than the Not-Via architecture requires.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-atlas-rtgwg-mrt-frr-architecture-01"/>
</reference>