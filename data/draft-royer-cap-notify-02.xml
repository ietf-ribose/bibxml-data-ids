<reference anchor="I-D.royer-cap-notify">
  <front>
    <title>iCalendar notification of upcoming VEVENTs, VTODOs, VALARMs or any changes</title>
    <author fullname="Doug Royer" initials="D." surname="Royer">
      <organization>INET-Consulting</organization>
    </author>
    <date year="2003" month="October" day="2"/>
    <abstract>
      <t>This memo describes a method used to ask for and receive notifications. These notifications will be the direct result of a stored components and the notifications or changes to components or the store and are represented in iCalendar format. This is an extensions to iCalendar objects. This memo has been updated to include non-CAP notificaitons. This memo includes a new CAP command types of 'REQUEST-NOTIFY', 'NOTIFICATION', and 'CANCEL-NOTIFY', a new property of 'OBSERVER', a new iCalendar component 'NOTIFICATION', CAP capabilities of 'CAN-NOTIFY', 'NOTIFY-UPDATES', and 'ALLOW-NOTIFY-BOT'. A 'REQUEST-NOTIFY' command is a request to add an observer to an component in the 'TARGET' calendar. In addition the 'REQUEST-NOTIFY' command can alert the CUA of changes to specific components or in the calendar or calendar store. Everything is subject to VCAR restrictions. These are asynchronous notifications must be advertised by the CS and requested by the CUA. This memo discusses how to transport these iCalendar objects and using them with CAP. In addition if the CS and CUA support the 'NOTIFY-UPDATES' capability, then the CS will send 'NOTIFICATION' components to the CUA describing the UIDs or TARGETS that have changed since the currently authenticated CU was last connected allowing for easier synchronization.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-royer-cap-notify-02"/>
  <format type="TXT" target="https://www.ietf.org/archive/id/draft-royer-cap-notify-02.txt"/>
</reference>