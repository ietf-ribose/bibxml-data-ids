<reference anchor="I-D.ietf-tls-extended-key-update" target="https://datatracker.ietf.org/doc/html/draft-ietf-tls-extended-key-update-04">
  <front>
    <title>Extended Key Update for Transport Layer Security (TLS) 1.3</title>
    <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
      <organization>Siemens</organization>
    </author>
    <author fullname="Michael Tüxen" initials="M." surname="Tüxen">
      <organization>Münster Univ. of Applied Sciences</organization>
    </author>
    <author fullname="Tirumaleswar Reddy.K" initials="T." surname="Reddy.K">
      <organization>Nokia</organization>
    </author>
    <author fullname="Steffen Fries" initials="S." surname="Fries">
      <organization>Siemens</organization>
    </author>
    <author fullname="Yaroslav Rosomakho" initials="Y." surname="Rosomakho">
      <organization>Zscaler</organization>
    </author>
    <date year="2025" month="March" day="3"/>
    <abstract>
      <t>The Transport Layer Security (TLS) 1.3 specification provides forward secrecy by utilizing an ephemeral key exchange during the initial handshake. Forward secrecy ensures that even if an attacker later obtains a party's long-term private key, past encrypted sessions cannot be decrypted. This protects against adversaries who record encrypted conversations in the hope of decrypting them later. TLS 1.3 also includes a Key Update mechanism, allowing cryptographic keys to be refreshed during an ongoing session. However, this update does not establish new forward-secret key material. While this is generally not an issue for short-lived sessions, it can pose a security risk for long-lived connections, such as those in industrial IoT or telecommunication networks, where an attacker could compromise application traffic secrets after the initial handshake. Earlier versions of TLS supported session renegotiation, a mechanism that allowed peers to establish new cryptographic parameters within an existing session. This included the ability to update the originally used long-term keys (certificates) with renewed credentials. However, due to security vulnerabilities, the renegotiation mechanism was modified via RFC 5746 and later removed entirely in TLS 1.3, leaving a gap in TLS's ability to refresh cryptographic material securely. This specification introduces an extended key update mechanism that supports forward secrecy, forcing attackers to continuously exfiltrate key material throughout the session to decrypt the entire conversation.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-ietf-tls-extended-key-update-04"/>
</reference>