<reference anchor="I-D.irtf-cfrg-randomness-improvements">
  <front>
    <title>Randomness Improvements for Security Protocols</title>
    <seriesInfo name="Internet-Draft" value="draft-irtf-cfrg-randomness-improvements-02"/>
    <author fullname="Cas Cremers" initials="C." surname="Cremers">
      <organization>University of Oxford</organization>
    </author>
    <author fullname="Luke Garratt" initials="L." surname="Garratt">
      <organization>University of Oxford</organization>
    </author>
    <author fullname="Stanislav V. Smyshlyaev" initials="S. V." surname="Smyshlyaev">
      <organization>CryptoPro</organization>
    </author>
    <author fullname="Nick Sullivan" initials="N." surname="Sullivan">
      <organization>Cloudflare</organization>
    </author>
    <author fullname="Christopher A. Wood" initials="C. A." surname="Wood">
      <organization>Apple Inc.</organization>
    </author>
    <date year="2018" month="July" day="15"/>
    <abstract>
      <t>Randomness is a crucial ingredient for TLS and related security protocols. Weak or predictable "cryptographically-strong" pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. The Dual EC random number backdoor and Debian bugs are relevant examples of this problem. This document describes a way for security protocol participants to mix their long- term private key into the entropy pool(s) from which random values are derived. This augments and improves randomness from broken or otherwise subverted CSPRNGs.</t>
    </abstract>
  </front>
</reference>