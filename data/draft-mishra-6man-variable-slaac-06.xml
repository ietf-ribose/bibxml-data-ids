<reference anchor="I-D.mishra-6man-variable-slaac">
  <front>
    <title>SLAAC with prefixes of arbitrary length in PIO (Variable SLAAC)</title>
    <author fullname="Gyan Mishra" initials="G. S." surname="Mishra">
      <organization>Verizon Inc.</organization>
    </author>
    <author fullname="Alexandre Petrescu" initials="A." surname="Petrescu">
      <organization>CEA, LIST</organization>
    </author>
    <author fullname="Naveen Kottapalli" initials="N." surname="Kottapalli">
      <organization>Benu Networks</organization>
    </author>
    <author fullname="Dusan Mudric" initials="D." surname="Mudric">
      <organization>Ciena</organization>
    </author>
    <author fullname="Dmytro Shytyi" initials="D." surname="Shytyi">
      <organization>SFR</organization>
    </author>
    <date year="2022" month="April" day="30"/>
    <abstract>
      <t>This draft proposes the use of arbitrary length prefixes in PIO for SLAAC. A prefix of length 63 in PIO, for example, would be permitted to form an address whose interface identifier length is 65, which allows several benefits. A prefix of length 65 would be allowed too, but it SHOULD NOT be used on a large scale, like at a large ISP; this is to avoid a race to the bottom. The implementation uses a parameter in the Host; this option is off by default. In that case, the Host respects the 64bit boundary. When the parameter is set to on the Host accepts prefixes of lengths different than 64 and forms 128bit addresses. In the past, various IPv6 addressing models have been proposed based on a subnet hierarchy embedding a 64-bit prefix. The last remnant of IPv6 classful addressing is a inflexible interface identifier boundary at /64. This document proposes flexibility to the fixed position of that boundary for interface addressing.</t>
    </abstract>
  </front>
  <seriesInfo name="Internet-Draft" value="draft-mishra-6man-variable-slaac-06"/>
  <format type="TXT" target="https://www.ietf.org/archive/id/draft-mishra-6man-variable-slaac-06.txt"/>
</reference>