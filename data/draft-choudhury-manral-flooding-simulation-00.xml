<reference anchor="I-D.choudhury-manral-flooding-simulation">
  <front>
    <title>LSA Flooding Optimization Algorithms and Their Simulation Study
</title>
    <seriesInfo name="Internet-Draft" value="draft-choudhury-manral-flooding-simulation-00"/>
    <author>
      <organization abbrev="IETF">Internet Engineering Task Force</organization>
    </author>
    <author fullname="G Choudhury" initials="G." surname="Choudhury"/>
    <author fullname="Vishwas Manral" initials="V." surname="Manral">
      <organization>Netplane Systems</organization>
    </author>
    <date year="2002" month="November"/>
    <abstract>
      <t>The full flooding of LSAs in OSPF may cause large CPU and memory consumption at node processors of a network with large number of nodes, links, adjacencies per node and LSDB size. An LSA storm, defined as the near-simultaneous update of a large number of LSAs, in such networks may cause network instability and outage. We do a simulation study of four alternative algorithms to full flooding to determine their ability to handle large LSA storms. Algorithm 2 does full flooding but in case two neighbors are connected by multiple interfaces, flooding is done over only one such interface. The other algorithms are based on Algorithm 2 and employ further flooding restrictions. In Algorithm 3 each node asks only a subset of its one-hop neighbors, known as multipoint relays, to flood further. In Algorithm 4 flooding is done only over a minimum spanning tree. Algorithm 5 uses full flooding (as in Algorithm 2) for LSAs carrying intra-area topology information and restricted flooding over a minimum spanning tree (as in Algorithm 4) for other LSAs.</t>
    </abstract>
  </front>
</reference>